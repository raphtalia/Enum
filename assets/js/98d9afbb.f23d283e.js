"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[690],{10209:function(e){e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a new Enum. Overwrites existing Enums including Roblox Enums.","params":[],"returns":[{"desc":"","lua_type":"Enum"}],"function_type":"static","source":{"line":19,"path":"src/init.lua"}},{"name":"GetStandardEnums","desc":"Returns the standard Roblox Enum table defined globally. This is useful for\\nwhen this library is imported under the name `Enum`.","params":[],"returns":[{"desc":"","lua_type":"Enum"}],"function_type":"method","source":{"line":32,"path":"src/init.lua"}},{"name":"FromValue","desc":"Given an Enum\'s name and the EnumItem\'s value, returns the EnumItem.","params":[{"name":"enumName","desc":"The name of the Enum.","lua_type":"string"},{"name":"enumValue","desc":"The value of the EnumItem.","lua_type":"any"}],"returns":[{"desc":"","lua_type":"EnumItem"}],"function_type":"method","source":{"line":43,"path":"src/init.lua"}},{"name":"Find","desc":"Safe way of checking if an Enum exists and returns it if it does.","params":[{"name":"enumName","desc":"The name of the Enum.","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Enum"}],"function_type":"method","source":{"line":57,"path":"src/init.lua"}}],"properties":[],"types":[],"name":"Enums","desc":"Entry-point for the Enum library.","source":{"line":9,"path":"src/init.lua"}}')}}]);